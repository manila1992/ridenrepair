{"ast":null,"code":"/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nimport globalVars from './globalVars';\nimport leIE8 from './lib/leIE8'; // less then or equal to IE8\n\nimport mainEventConnectors from './mainEventConnectors'; // constants\n\nimport { DEFAULT_THROTTLE_RATE } from './constants';\n/**\n * Subscribe to UI events.\n * @method subscribe\n * @param {String} type - The type of event.\n * @param {Function} cb - The callback function.\n * @param {Object} options.context - The caller.\n * @param {Number} options.throttleRate - The amount of time for throttling.\n * @param {Boolean} options.useRAF - Use rAF for throttling if true.\n * @param {Object} options.eventOptions - Option to pass to event listener\n * @return {Object} The object with unsubscribe function.\n */\n\nfunction subscribe(type, cb) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var useRAF = options.useRAF || false;\n  var throttleRate = parseInt(options.throttleRate, 10);\n  var eventOptions = options.eventOptions;\n\n  if (isNaN(throttleRate)) {\n    throttleRate = DEFAULT_THROTTLE_RATE;\n  }\n\n  if (useRAF) {\n    throttleRate = 'raf';\n  } // turn off throttle if the browser is IE8 or less, because window.event will be reset\n  // when using any delayed function, i.g., setTimeout, or rAF.\n\n\n  if (leIE8) {\n    throttleRate = 0;\n  } // once those variables enabled, then never disabled.\n\n\n  globalVars.enableScrollInfo = globalVars.enableScrollInfo || options.enableScrollInfo || false;\n  globalVars.enableResizeInfo = globalVars.enableResizeInfo || options.enableResizeInfo || false;\n  globalVars.enableTouchInfo = globalVars.enableTouchInfo || options.enableTouchInfo || false;\n  return mainEventConnectors[type](throttleRate, cb, options, eventOptions);\n}\n\nexport default subscribe;","map":{"version":3,"names":["globalVars","leIE8","mainEventConnectors","DEFAULT_THROTTLE_RATE","subscribe","type","cb","options","arguments","length","undefined","useRAF","throttleRate","parseInt","eventOptions","isNaN","enableScrollInfo","enableResizeInfo","enableTouchInfo"],"sources":["/home/lk/website/ridenrepair/node_modules/subscribe-ui-event/dist-es/subscribe.js"],"sourcesContent":["/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n\nimport globalVars from './globalVars';\nimport leIE8 from './lib/leIE8'; // less then or equal to IE8\nimport mainEventConnectors from './mainEventConnectors';\n\n// constants\nimport { DEFAULT_THROTTLE_RATE } from './constants';\n\n/**\n * Subscribe to UI events.\n * @method subscribe\n * @param {String} type - The type of event.\n * @param {Function} cb - The callback function.\n * @param {Object} options.context - The caller.\n * @param {Number} options.throttleRate - The amount of time for throttling.\n * @param {Boolean} options.useRAF - Use rAF for throttling if true.\n * @param {Object} options.eventOptions - Option to pass to event listener\n * @return {Object} The object with unsubscribe function.\n */\nfunction subscribe(type, cb) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var useRAF = options.useRAF || false;\n  var throttleRate = parseInt(options.throttleRate, 10);\n  var eventOptions = options.eventOptions;\n\n  if (isNaN(throttleRate)) {\n    throttleRate = DEFAULT_THROTTLE_RATE;\n  }\n\n  if (useRAF) {\n    throttleRate = 'raf';\n  }\n\n  // turn off throttle if the browser is IE8 or less, because window.event will be reset\n  // when using any delayed function, i.g., setTimeout, or rAF.\n  if (leIE8) {\n    throttleRate = 0;\n  }\n\n  // once those variables enabled, then never disabled.\n  globalVars.enableScrollInfo = globalVars.enableScrollInfo || options.enableScrollInfo || false;\n  globalVars.enableResizeInfo = globalVars.enableResizeInfo || options.enableResizeInfo || false;\n  globalVars.enableTouchInfo = globalVars.enableTouchInfo || options.enableTouchInfo || false;\n\n  return mainEventConnectors[type](throttleRate, cb, options, eventOptions);\n}\n\nexport default subscribe;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAAiC;;AACjC,OAAOC,mBAAP,MAAgC,uBAAhC,C,CAEA;;AACA,SAASC,qBAAT,QAAsC,aAAtC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,EAAzB,EAA6B;EAC3B,IAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;EAEA,IAAIG,MAAM,GAAGJ,OAAO,CAACI,MAAR,IAAkB,KAA/B;EACA,IAAIC,YAAY,GAAGC,QAAQ,CAACN,OAAO,CAACK,YAAT,EAAuB,EAAvB,CAA3B;EACA,IAAIE,YAAY,GAAGP,OAAO,CAACO,YAA3B;;EAEA,IAAIC,KAAK,CAACH,YAAD,CAAT,EAAyB;IACvBA,YAAY,GAAGT,qBAAf;EACD;;EAED,IAAIQ,MAAJ,EAAY;IACVC,YAAY,GAAG,KAAf;EACD,CAb0B,CAe3B;EACA;;;EACA,IAAIX,KAAJ,EAAW;IACTW,YAAY,GAAG,CAAf;EACD,CAnB0B,CAqB3B;;;EACAZ,UAAU,CAACgB,gBAAX,GAA8BhB,UAAU,CAACgB,gBAAX,IAA+BT,OAAO,CAACS,gBAAvC,IAA2D,KAAzF;EACAhB,UAAU,CAACiB,gBAAX,GAA8BjB,UAAU,CAACiB,gBAAX,IAA+BV,OAAO,CAACU,gBAAvC,IAA2D,KAAzF;EACAjB,UAAU,CAACkB,eAAX,GAA6BlB,UAAU,CAACkB,eAAX,IAA8BX,OAAO,CAACW,eAAtC,IAAyD,KAAtF;EAEA,OAAOhB,mBAAmB,CAACG,IAAD,CAAnB,CAA0BO,YAA1B,EAAwCN,EAAxC,EAA4CC,OAA5C,EAAqDO,YAArD,CAAP;AACD;;AAED,eAAeV,SAAf"},"metadata":{},"sourceType":"module"}